program = _{ SOI ~ (word_decl|term)* ~ EOI}

value = _{ float|string|character|table|quote }
term = _{
	  float | string | character
	| quote | table  | stackblk
	| stack | fetch  | store   | loopblk
	| ifblk | until  | cond    | word
	| breakstmt | continuestmt | asmstmt

}

word_decl = { "word" ~ ident ~ guard? ~ block }
ifblk = { "if" ~ block ~ ("orelse" ~ block)? }

loopblk = { "loop" ~ block }
until = { "until" ~ block }
continuestmt = { "continue" }
breakstmt = { "break" }

cond = { "cond" ~ "[[" ~ condarm+ ~ condany? ~ "]]" }
condarm = { "is?" ~ block ~ block }
condany = { "any" ~ block }

asmstmt = { "asm" ~ stack ~ ident ~ ident* ~ ";;" }

stack = { "$" ~ ident }
stackblk = { "sw:" ~ stack ~ block }

block = { "[[" ~ term* ~ "]]" }

quote = { "[" ~ term* ~ "]" }

fetch = { "@" ~ ident }
store = { "!" ~ ident }

// TODO: integers in other bases (e.g. 0x10)
int   = _{ ASCII_DIGIT ~ (ASCII_DIGIT | "_")* }
exp   = _{ ^"e" ~ ("+" | "-")? ~ int }
float = @{
	( "-"? ~ int ~ "." ~ int? ~ exp? |
	  "-"? ~ int ~ exp? |
	  "-"? ~ int
	) ~ forced_ws
}

string = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
character = @{ "'" ~ (!WHITESPACE ~ ANY) ~ "'" }

table = { ("{{" ~ table_keyval* ~ "}}")|("{" ~ table_val* ~ "}")}
table_keyval = { value ~ value }
table_val = { value }

guard = _{ "<" ~ guard_set ~ "-" ~ guard_set ~ ">" }
guard_set  = _{ guard_item* }
guard_item = _{ "a" | "s" | "n" | "q" | "*" }

word  = @{ !RESERVED ~ (!WHITESPACE ~ ANY)+ }
ident = @{ !RESERVED ~ (!WHITESPACE ~ ANY)+ }

forced_ws = _{ WHITESPACE+ | EOI }
RESERVED  = _{
	"if" | "orelse" | "until" | "word" | "cond" | "is?" | "any" |
	"continue" | "break" | "loop" | "sw:" | "asm" | ";;" |
	"[[" | "]]" | "[" | "]" | "{" | "}"
}

COMMENT    = _{ ("(" ~ (COMMENT|(!")" ~ ANY))* ~ ")") | ("\\" ~ (!"\n" ~ ANY)*) }
WHITESPACE = _{ " " | "\t" | "\n" }
