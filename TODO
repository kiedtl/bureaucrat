Roadmap
=======

x Basic analyzer (keep track of stack count)
x Basic analyzer (keep track of types)
x Memory opcodes
x Devices (same as enums?)
x String literals
x Variables
x If statement
x Structs
x HERE
x Malloc
  x Basic + free + realloc
  x Defrag
  x Opaque ("void") pointers
  x Maybe0
  x Unit tests
x Remove macros
x Test suite
x Imports
x Arrays (sized, unknown-size)
x Vec
x Metadata
x (r) keyword (use rt-stack)
x Signed numbers
  x Comparison
  x Printing
  x Lexer/Parser
  x Abs/Neg?/Division
- A* pathfinding
  - GetIndex fixes
  - (len)
  - Enums
x Refactoring
  x Scopes
  x Explicit main function
  x Decls within decls
- Fixed-point
  - Printing
- Solve Effects issue
  - i.e. how to represent effect of quote in arity def?
  - would require being able to "expand" typeref...
  - need major refactoring?
- Fix: inlining func w/ early return
x Metadata

- Static analysis pt 2
  - New analyser pass: track comptime-known vals
  - Devices
    - Chk: is port readable/writeable when calling deo/dei

Optimizations
-------------

- Inline locals
- Eliminate duplicate decls (from generics)
  - E.g. 0 1 swap and 0 (as ptr) 1 (as ptr) swap -> two different functions,
    which is unnecessary (only one needs to be generated)
  - Solution: after spouting out decl at codegen time, check if the generated
    output is exactly the same as another variant, and delete if that's the
    case (and set romloc to that other function's romloc)
    - Change variants field of decl to ASTNodePtrList to make this easy
- Auto-inlining
  - Metadata: always/never inline
- Tail recursion
  - (recurse) builtin

Warnings
--------

- Sprite structs can have metadata to warn if 0-initialized (either not enough
  data or no data)
  - #(warn zero-init)
